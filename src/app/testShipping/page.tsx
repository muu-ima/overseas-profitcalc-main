"use client";

import { useEffect } from "react";
import { getCheapestShipping, ShippingData } from "@/lib/shipping";

export default function TestShipping() {
  useEffect(() => {
    const shippingData: ShippingData = {
      small_packet_air: [
        { weight: 100, price: 970 },
        { weight: 200, price: 1150 },
        { weight: 300, price: 1330 },
        { weight: 400, price: 1510 },
        { weight: 500, price: 1690 },
        { weight: 600, price: 1870 },
        { weight: 700, price: 2050 },
        { weight: 800, price: 2230 },
        { weight: 900, price: 2410 },
        { weight: 1000, price: 2590 },
        { weight: 1100, price: 2770 },
        { weight: 1200, price: 2950 },
        { weight: 1300, price: 3130 },
        { weight: 1400, price: 3310 },
        { weight: 1500, price: 3490 },
        { weight: 1600, price: 3670 },
        { weight: 1700, price: 3850 },
        { weight: 1800, price: 4030 },
        { weight: 1900, price: 4210 },
        { weight: 2000, price: 4390 },
      ],
      fedex: [
        { weight: 500, price: 2500 },
        { weight: 1000, price: 2600 },
        { weight: 1500, price: 3100 },
        { weight: 2000, price: 3600 },
        { weight: 2500, price: 4200 },
        { weight: 3000, price: 4200 },
        { weight: 3500, price: 4700 },
        { weight: 4000, price: 5100 },
        { weight: 4500, price: 5600 },
        { weight: 5000, price: 6100 },
        { weight: 5500, price: 7100 },
        { weight: 6000, price: 7300 },
        { weight: 6500, price: 7600 },
        { weight: 7000, price: 7800 },
        { weight: 7500, price: 8000 },
        { weight: 8000, price: 8300 },
        { weight: 8500, price: 8500 },
        { weight: 9000, price: 8800 },
        { weight: 9500, price: 9000 },
        { weight: 10000, price: 9200 },
        { weight: 10500, price: 11300 },
        { weight: 11000, price: 11400 },
        { weight: 11500, price: 11500 },
        { weight: 12000, price: 11600 },
        { weight: 12500, price: 11700 },
        { weight: 13000, price: 11700 },
        { weight: 13500, price: 11800 },
        { weight: 14000, price: 11900 },
        { weight: 14500, price: 12000 },
        { weight: 15000, price: 12000 },
        { weight: 15500, price: 12100 },
        { weight: 16000, price: 12200 },
        { weight: 16500, price: 12300 },
        { weight: 17000, price: 12400 },
        { weight: 17500, price: 12400 },
        { weight: 18000, price: 12500 },
        { weight: 18500, price: 12600 },
        { weight: 19000, price: 12700 },
        { weight: 19500, price: 12700 },
        { weight: 20000, price: 12800 },
        { weight: 21000, price: 14084 },
        { weight: 22000, price: 15268 },
        { weight: 23000, price: 16452 },
        { weight: 24000, price: 17636 },
        { weight: 25000, price: 18820 },
        { weight: 26000, price: 20004 },
        { weight: 27000, price: 21188 },
        { weight: 28000, price: 22372 },
        { weight: 29000, price: 23556 },
        { weight: 30000, price: 24740 },
      ],
      ems: [
        { weight: 500, price: 3150 },
        { weight: 600, price: 3400 },
        { weight: 700, price: 3650 },
        { weight: 800, price: 3900 },
        { weight: 900, price: 4150 },
        { weight: 1000, price: 4400 },
        { weight: 1250, price: 5000 },
        { weight: 1500, price: 5550 },
        { weight: 2000, price: 6700 },
        { weight: 2500, price: 7750 },
        { weight: 3000, price: 8800 },
        { weight: 3500, price: 9850 },
        { weight: 4000, price: 10900 },
        { weight: 4500, price: 11950 },
        { weight: 5000, price: 13000 },
        { weight: 5500, price: 14050 },
        { weight: 6000, price: 15100 },
        { weight: 7000, price: 17200 },
        { weight: 8000, price: 19300 },
        { weight: 9000, price: 21400 },
        { weight: 10000, price: 23500 },
        { weight: 11000, price: 25600 },
        { weight: 12000, price: 27700 },
        { weight: 13000, price: 29800 },
        { weight: 14000, price: 31900 },
        { weight: 15000, price: 34000 },
        { weight: 16000, price: 36100 },
        { weight: 17000, price: 38200 },
        { weight: 18000, price: 40300 },
        { weight: 19000, price: 42400 },
        { weight: 20000, price: 44500 },
      ],
    };

    const actualWeight = 5732;
    const dimensions = { length: 52, width: 50, height: 35 };

    const result = getCheapestShipping(shippingData, actualWeight, dimensions);
    console.log("最安配送方法:", result);
  }, []);

  return <div>コンソールを開いて結果を確認してください</div>;
}
